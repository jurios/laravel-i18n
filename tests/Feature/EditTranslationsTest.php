<?php

namespace Kodilab\LaravelI18n\Tests\Feature;


use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Kodilab\LaravelI18n\Facade;
use Kodilab\LaravelI18n\Models\Locale;
use Kodilab\LaravelI18n\Models\Text;
use Kodilab\LaravelI18n\Models\Translation;
use Kodilab\LaravelI18n\Tests\TestCase;

class EditTranslationsTest extends TestCase
{
    use RefreshDatabase;
    use WithFaker;

    /** @var Locale $locale */
    protected $locale;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->generateFallbackLocale();

        $this->generateFallbackLocale();

        $this->locale = factory(Locale::class)->create();

        Facade::editorRoutes();
    }

    public function test_list_translations()
    {
        $locale = $this->locale;

        $this->get(route('i18n.locales.translations.index', compact('locale')))
            ->assertStatus(200);
    }

    public function test_show_translation_info()
    {
        $locale = $this->locale;

        $translation = factory(Translation::class)->create(['locale_id' => $locale->id]);

        $this->get(route('i18n.locales.translations.info', [
            'locale' => $locale,
            'md5' => $translation->md5
        ]))->assertStatus(200);


    }

    public function test_only_show_info_button_if_configuration_allows_it()
    {
        $this->app['config']->set('i18n.show_translation_info', true);

        $locale = $this->locale;

        $translation = factory(Text::class)->create();

        $this->get(route('i18n.locales.translations.index', compact('locale')))->assertSee('btn-info');

        $this->app['config']->set('i18n.show_translation_info', false);

        $this->get(route('i18n.locales.translations.index', compact('locale')))->assertDontSee('btn-info');
    }
}