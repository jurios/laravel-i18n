<?php

namespace Kodilab\LaravelI18n\Tests\Feature;

use Illuminate\Foundation\Auth\User;
use Illuminate\Foundation\Testing\WithFaker;
use Kodilab\LaravelI18n\Models\Locale;
use Kodilab\LaravelI18n\Models\Translation;
use Kodilab\LaravelI18n\Tests\TestCase;

class MiddlewareTest extends TestCase
{
    /** @var Locale $locale */
    protected $locale;

    /** @var string $text */
    protected $text;

    /** @var Translation $fallback_translation */
    protected $fallback_translation;

    /** @var Translation $locale_translation */
    protected $locale_translation;

    use WithFaker;

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->generateFallbackLocale();

        $this->locale = factory(Locale::class)->create(['enabled' => true]);

        $this->text = $this->faker->paragraph;

        $this->fallback_translation = factory(Translation::class)->create([
            'md5' => md5($this->text),
            'translation' => $this->text,
            'locale_id' => $this->fallback_locale->id
        ]);

        $this->locale_translation = factory(Translation::class)->create([
            'md5' => md5($this->text),
            'translation' => $this->faker->paragraph,
            'locale_id' => $this->locale->id
        ]);
    }

    public function test_set_locale_by_path_middleware()
    {
        $this->addMiddlewaredRoute('setLocaleByPath');

        $this->get(route('tests.index'))->assertStatus(200)
            ->assertSee($this->fallback_translation->translation)
            ->assertDontSee($this->locale_translation->translation);

        $this->get(route('tests.index', ['locale' => $this->locale->reference]))->assertStatus(200)
            ->assertSee($this->locale_translation->translation)
            ->assertDontSee($this->fallback_translation->translation);
    }

    public function test_set_locale_by_user_session_middleware()
    {
        $this->addMiddlewaredRoute('setLocaleByUserSession');

        $this->session(['user_locale' => $this->fallback_locale])
            ->get(route('tests.index'))->assertStatus(200)
            ->assertSee($this->fallback_translation->translation)
            ->assertDontSee($this->locale_translation->translation);

        $this->session(['user_locale' => $this->locale])
            ->get(route('tests.index'))->assertStatus(200)
            ->assertSee($this->locale_translation->translation)
            ->assertDontSee($this->fallback_translation->translation);
    }

    private function addMiddlewaredRoute(string $middleware)
    {
        $this->app->make('router')->group(
            [
                'prefix' => '{locale?}',
                'where' => ['locale' => '[a-zA-Z_-]*'],
                'middleware' => ['web', $middleware]
            ], function () {
            $this->app->make('router')
                ->get('/', function () {
                    return t($this->text);
                })->name('tests.index');
        });
    }
}