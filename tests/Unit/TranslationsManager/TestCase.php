<?php


namespace Kodilab\LaravelI18n\Tests\Unit\TranslationsManager;


use Illuminate\Foundation\Testing\WithFaker;
use Kodilab\LaravelI18n\Models\Locale;

class TestCase extends \Kodilab\LaravelI18n\Tests\TestCase
{
    /** @var string */
    protected $lang_path;

    use WithFaker;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->lang_path = $this->resources_path . DIRECTORY_SEPARATOR . 'lang';
        $this->createLangDirectory();
    }

    protected function tearDown(): void
    {
        $this->removeLangDirectory();
        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    private function createLangDirectory()
    {
        if (!is_dir($this->lang_path)) {
            $this->filesystem->makeDirectory($this->lang_path, 0755, true);
        }
    }

    private function removeLangDirectory()
    {
        if (is_dir($this->lang_path)) {
            $this->filesystem->deleteDirectory($this->lang_path);
        }
    }

    protected function generateRandomTranslationFile(Locale $locale, int $count = 10)
    {
        $translations_path = $this->lang_path . DIRECTORY_SEPARATOR . $locale->reference . '.json';

        $translations = [];

        for ($i = 0; $i < $count; $i ++) {
            $translations[$this->faker->unique()->paragraph] = $this->faker->paragraph;
        }

        $translations_json = json_encode($translations, JSON_PRETTY_PRINT);

        file_put_contents($translations_path, $translations_json);
    }
}