<?php

namespace Kodilab\LaravelI18n\Tests\Unit;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\DB;
use Kodilab\LaravelI18n\Exceptions\MissingFallbackLocaleException;
use Kodilab\LaravelI18n\Exceptions\MissingLocaleException;
use Kodilab\LaravelI18n\Models\Locale;
use Kodilab\LaravelI18n\Tests\TestCase;

class LocaleTest extends TestCase
{
    /** @var Locale */
    protected $fallback_locale;

    use RefreshDatabase;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->fallback_locale = factory(Locale::class)->create([
            'fallback' => true
        ]);
    }

    public function test_iso_field_is_a_lowercase_string()
    {
        $locale = factory(Locale::class)->create(['ISO_639_1' => 'EN']);

        $this->assertEquals('en', $locale->ISO_639_1);
        $this->assertEquals('en', $locale->reference);
    }

    public function test_getFallbackLocale_returns_the_fallback_locale()
    {
        $this->assertEquals($this->fallback_locale->id, Locale::getFallbackLocale()->id);
    }

    public function test_getFallbackLocale_returns_an_exception_if_the_fallback_does_not_exists()
    {
        $this->expectException(MissingFallbackLocaleException::class);

        $this->fallback_locale->delete();

        Locale::getFallbackLocale();
    }

}
