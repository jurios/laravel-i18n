<?php

namespace Kodilab\LaravelI18n;

use Illuminate\Database\Eloquent\Collection;
use Illuminate\Database\Eloquent\Model;

class Text extends Model
{
    protected $table;

    protected $fillable = ['md5', 'text', 'paths'];

    protected $casts = [
        'md5' => 'string',
        'text' => 'string',
        'paths' => 'array',
    ];

    public $timestamps = false;

    /**
     * Returns whether the translation exists for the language $language
     * @param $md5
     * @param Language $language
     * @return bool
     */
    public static function existsText($md5)
    {
        return Text::where('md5', $md5)->exists();
    }

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        self::created(function (Text $text) {

            $base_language = Language::getBaseLanguage();

            /** @var Collection $existingTranslations */
            $existingTranslations = Translation::where('md5', $text->md5)->get();

            if ($existingTranslations->isEmpty())
            {
                Translation::create([
                    'md5' => $text->md5,
                    'text' => $text->text,
                    'language_id' => $base_language->id,
                    'text_id' => $text->id
                ]);

                return;
            }

            foreach ($existingTranslations as $translations)
            {
                $translations->update([
                    'text_id' => $text->id
                ]);
            }
        });
    }

    public function __construct(array $attributes = [])
    {
        parent::__construct($attributes);
        $this->table = config('i18n.text.table');
    }

    //Relationships

    public function translations()
    {
        $this->hasMany(Translation::class);
    }
}
