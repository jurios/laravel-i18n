<?php


namespace Kodilab\LaravelI18n\Commands\Generators;


use Illuminate\Console\Command;
use Illuminate\Filesystem\Filesystem;
use Kodilab\LaravelI18n\Exceptions\MissingFallbackLocaleException;
use Kodilab\LaravelI18n\i18n\i18n;
use Kodilab\LaravelI18n\Models\Locale;

class Fallback extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'i18n:fallback';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Generates the fallback locale if it does not exists';

    /**
     * Indicates whether the command should be shown in the Artisan command list.
     *
     * @var bool
     */
    protected $hidden = true;

    /**
     * Execute the console command.
     *
     * @return mixed
     *
     */
    public function handle()
    {
        $this->output->title('Generating i18n fallback locale');

        try {
            Locale::getFallbackLocale();
            $this->output->warning('Fallback locale already exists');
        } catch (MissingFallbackLocaleException $exception) {

            $fallback_name = config('app.fallback_locale');

            $fallback_locale = Locale::create([
                'language' => i18n::getLanguage($fallback_name),
                'region' => i18n::getRegion($fallback_name),
                'description' => 'Fallback locale autogenerated by Laravel I18n install',
                'laravel_locale' => config('app.fallback_locale'),
                'currency_number_decimals' => null,
                'currency_decimals_punctuation' => null,
                'currency_thousands_separator' => null,
                'currency_symbol' => null,
                'currency_symbol_position' => 'before',
                'carbon_locale' => config('app.fallback_locale'),
                'tz' => null,
                'enabled' => true,
                'fallback' => true
            ]);

            $this->output->success('Fallback locale created: ' . $fallback_locale->reference);
        }

    }
}